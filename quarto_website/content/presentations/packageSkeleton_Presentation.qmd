---
pagetitle: "packageSkeleton: A modular data science development framework that integrates R package tooling, Quarto-based documentation, and GitHub-based collaboration into a cohesive foundation for analytic and interactive application development." 
author: Damian Betebenner
format:
  revealjs:
    logo: assets/img/cfa_logo_full_color.png
    width: 1600
    height: 900
    preview-links: auto
    scrollable: false
    slide-number: true
    show-slide-number: all
    multiplex: true
    controls: true
    background-transition: fade
    fig-align: center
    center-title-slide: false
    navigation-mode: vertical
    theme: [simple, assets/css/presentation-style.scss]
    html-math-method: mathjax
    embed-resources: true
    bibliography: assets/bibliography/references.bib
  pptx:
    theme: [simple, assets/css/presentation-style.scss]
    html-math-method: mathjax
    embed-resources: true
    bibliography: assets/bibliography/references.bib
draft: false
---

# {background-color=#ABCDEF}

:::: {.columns}

::: {.column width=50% style="text-align: center;"}

<h1 class="packageskeleton-title">packageSkeleton</h1>

<br>

![](assets/img/packageSkeleton.png){.title-logo width=400px}

:::

::: {.column style="text-align: right; font-size: 68px; font-style: italic; padding-top: 450px;"}

A modular data science<br>development framework.

:::

::::

<!--
#########################################
Section: Reproducible Research
#########################################
-->


# {background-color=#ABCDEF}

<h2 class="large-centered-uhoh">Reproducible<br>Research</h2>


---

## Reproducible Research

- Reproducible research is a cornerstone of modern data science.
- The enemy of reproducible research is complexity. 
- Taming complexity requires a foundation (i.e., a framework) that provides a structure for the development of the analytic capacities providing for an easily maintained integration of the analytic tools, documentation, and content associated with the analytic tools.
- Without a solid foundation, analytic tools are often "spaghetti code" that is not reusable, not reproducible, and not well documented.
- The goal of **packageSkeleton** is to provide a foundation for data science research that is reproducible, reusable, and well documented.


<!--
#########################################
Section: packageSkeleton
#########################################
-->


# {background-color=#ABCDEF}

<h2 class="large-centered-uhoh">Why<br>packageSkeleton?</h2>

---

## Introduction to packageSkeleton

- **packageSkeleton** is a streamlined GitHub template designed to simplify R package development.
- It also integrates with a Quarto-powered website hosted on GitHub, providing users a structured way to develop, document, and distribute their work.

---

## Why packageSkeleton?

- Encourages best practices in R package development
- Provides a structure that integrates R code and documentation
- Simplifies setting up a website for sharing your work
- Ideal for both beginners and experienced developers

---

## Key Features

- **R Package Template**: A basic structure that you can easily customize for your package needs.
- **GitHub Integration**: Fork the repository and start developing right away.
- **Quarto Documentation**: Create rich, dynamic content that documents your package and provides a public-facing website.

---

## Customizing packageSkeleton

1. **Rename the Package**: Start by modifying the `DESCRIPTION` file and renaming the package.
2. **Add Your Own Functions**: Inside the `R/` directory, include your custom R functions.
3. **Generate Documentation**: Use `roxygen2` to create function documentation and `Quarto` to build your website.
4. **Deploy the Website**: Publish the Quarto website using GitHub Pages.

---

## Requirements

- **R**: The latest version of R (available from [CRAN](https://cran.r-project.org/))
- **Quarto**: The Quarto CLI tool for building documents and websites ([Install Quarto](https://quarto.org/docs/get-started/)).
- **Git**: Version control to manage your code and push to GitHub.
- **GitHub**: Host your R package and website.

---

## GitHub Workflow

1. **Fork the Repository**: Start by forking the `packageSkeleton` repo from GitHub.
2. **Clone Locally**: Clone the repo to your local machine using Git.
3. **Push Changes**: After making your edits, push them to your GitHub repository.
4. **Deploy Website**: Use GitHub Pages to host the Quarto-based documentation.

---

## Customizing the Website

- **Quarto Configuration**: Customize the `_quarto.yml` file to change the website settings such as title, author, and repository URL.
- **Add Pages**: Create `.qmd` files to add custom documentation, tutorials, and more.
- **Themes & Layouts**: Modify the website's theme using CSS or choose from Quarto's built-in themes.

---

## Building Your Package

- **Add Functions**: Use the `R/` folder to store your custom R scripts and functions.
- **Generate Documentation**: Write roxygen-style documentation for each function and build it using `devtools::document()`.
- **Check Your Package**: Ensure your package passes all R CMD checks by running `devtools::check()`.

---

## Publishing the Website

1. **Build the Website**: Run `quarto render` to build the static HTML content.
2. **Publish on GitHub Pages**: Push your changes to the repository and GitHub Pages will automatically deploy the site.
3. **Preview Locally**: Use `quarto preview` to see live updates of the website as you edit.


<!--
#########################################
Section: Future Directions
#########################################
-->

# {background-color=#ABCDEF}

<h2 class="large-centered-uhoh">Future<br>Directions</h2>

---

## Future Directions

- **NextJS Integration**: Integrate packageSkeleton into NextJS framework to facilitate the development of a more robust and scalable data science development framework.
- **Web API Development**: Expose analytics results as web APIs to be used by users as well as other applications.
- **MCP Integration**: Utilize Model Context Protocol (MCP) to expose package tools and resources for integration with popular AI services. 

## Conclusion

- **packageSkeleton** is a powerful starting point for R package development.
- Use it to streamline your workflow, create well-documented R code, and publish it with a professional Quarto-powered website.
- Leverage GitHub for collaboration, version control, and public distribution of your work.

---

## Further Resources

- [Quarto Documentation](https://quarto.org/docs/)
- [R Package Development](https://r-pkgs.org/)
- [GitHub Pages](https://pages.github.com/)

---


```{r echo=FALSE, results="hide", message=FALSE}

URL <- "https://centerforassessment.github.io/packageSkeleton/presentations.html"

qr_code.tmp <- qrcode::qr_code(URL)
png("assets/img/qr_code.png", width = 800, height = 800, bg = "transparent")
par(bg = NA)
plot(qr_code.tmp, bg = "transparent")
invisible(dev.off())
```

![](assets/img/qr_code.png){width=800px style="display: block; margin: 0 auto; border-radius: 4px; box-shadow: 0 4px 8px rgba(0,0,0,0.1); vertical-align: middle;"}
